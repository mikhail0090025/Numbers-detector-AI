services:
  images_manager:
    build:
      context: .
      dockerfile: all_microservices/images_manager/Dockerfile
    ports:
      - "5000:5000"
    networks:
      - app-network
    volumes:
      - ./all_microservices/images_manager:/app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/" ]
      interval: 10s
      timeout: 5s
      retries: 3
  neural_net:
    build:
      context: .
      dockerfile: all_microservices/Neural_net/Dockerfile
    ports:
      - "5001:5001"
    networks:
      - app-network
    volumes:
      - ./all_microservices/Neural_net:/app
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://localhost:5001/" ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
  frontend_api:
    build:
      context: .
      dockerfile: all_microservices/frontend_api/Dockerfile
    ports:
      - "5002:5002"
    networks:
      - app-network
  graphics_manager:
    build:
      context: .
      dockerfile: all_microservices/graphics_manager/Dockerfile
    ports:
      - "5003:5003"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
